/**
 * This file was created by Quorum Born IT <http://www.qub-it.com/> and its 
 * copyright terms are bind to the legal agreement regulating the FenixEdu@ULisboa 
 * software development project between Quorum Born IT and Serviços Partilhados da
 * Universidade de Lisboa:
 *  - Copyright © 2015 Quorum Born IT (until any Go-Live phase)
 *  - Copyright © 2015 Universidade de Lisboa (after any Go-Live phase)
 *
 * Contributors: paulo.abrantes@qub-it.com
 * Contributors: nuno.pinheiro@qub-it.com
 *
 * 
 * This file is part of FenixEdu fenixedu-ulisboa-specifications.
 *
 * FenixEdu fenixedu-ulisboa-specifications is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * FenixEdu fenixedu-ulisboa-specifications is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with FenixEdu fenixedu-ulisboa-specifications.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.fenixedu.ulisboa.specifications.domain;

class idcards.CgdCard {
	String mifareCode;
	String cardNumber;
	LocalDate lastMifareModication;
	LocalDate issueDate;
	LocalDate validUntil;
	boolean temporary;
}

relation CgdCardPerson {
	idcards.CgdCard playsRole cgdCards {
		multiplicity *;
	}
	.org.fenixedu.academic.domain.Person playsRole person;
}

relation CgdCardRootDomainObject {
	idcards.CgdCard playsRole cgdCards {
		multiplicity *;
	}
	.org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
}

// ==================== ULisboa Specifications Root ====================

class ULisboaSpecificationsRoot {
}

relation ULisboaSpecificationsRootBennu {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	.org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
}

relation ULisboaSpecificationsRootRegistrationProtocol {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	.org.fenixedu.academic.domain.student.RegistrationProtocol playsRole defaultRegistrationProtocol;
}

class ContingentToIngression {
	String contingent;
}

relation ContingentToIngressionIngressionType {
	.org.fenixedu.academic.domain.candidacy.IngressionType playsRole ingressionType;
	ContingentToIngression playsRole contingentToIngressions {
		multiplicity *;
	}
}

relation ULisboaSpecificationsRootContingentToIngressions {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	ContingentToIngression playsRole contingentToIngressions {
		multiplicity *;
	}
}

// ==================== DGES Student Import ====================

class student.access.importation.DgesStudentImportationProcess extends .org.fenixedu.academic.domain.QueueJobWithFile {
	EntryPhase entryPhase;
}

class student.access.importation.DgesStudentImportationFile extends .org.fenixedu.academic.domain.File {
}

relation ImportCandidaciesFromDgesProcessDgesImportationStudentFile {
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
	student.access.importation.DgesStudentImportationFile playsRole dgesStudentImportationFile;
}

relation DgesStudentImportationProcessExecutionYear {
	.org.fenixedu.academic.domain.ExecutionYear playsRole executionYear;
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess {
		multiplicity *;
	}
}

relation DgesStudentImportationProcessSpace {
	.org.fenixedu.spaces.domain.Space playsRole space;
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess {
		multiplicity*;
	}
}

relation DgesStudentImportationProcessStudentCandidacy {
	student.access.importation.DgesStudentImportationProcess playsRole dgesStudentImportationProcess;
	.org.fenixedu.academic.domain.candidacy.StudentCandidacy playsRole studentCandidacy {
		multiplicity *;
	}
}

//Class to bypass PortalLayoutInjector limitations. Check the java file for more information
class ULisboaPortalConfiguration{
}

relation ULisboaPortalConfigurationPortalConfiguration{
	.org.fenixedu.bennu.portal.domain.PortalConfiguration playsRole portal{
		multiplicity 1;
	}
	ULisboaPortalConfiguration playsRole ulisboaPortal{
		multiplicity 1;
	}
}


// ==================== BEGIN: MaximumNumberOfCreditsForEnrolmentPeriodEnforcer ====================

class MaximumNumberOfCreditsForEnrolmentPeriodEnforcer {
	Double maxCredits;
	Double maxCreditsPartialTime;
}

relation ULisboaSpecificationsRootMaximumNumberOfCreditsForEnrolmentPeriodEnforcer {
	ULisboaSpecificationsRoot playsRole uLisboaSpecificationsRoot;
	MaximumNumberOfCreditsForEnrolmentPeriodEnforcer playsRole maximumNumberOfCreditsForEnrolmentPeriodEnforcer {
		multiplicity 0..1;
	}
}

// ==================== END: MaximumNumberOfCreditsForEnrolmentPeriodEnforcer ====================
